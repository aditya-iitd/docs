{
  "openapi": "3.0.1",
  "paths": {
    "/chat": {
      "post": {
        "summary": "Chat with the specified repository",
        "operationId": "chat",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the repository to query (e.g., github.com/calcom/cal.com)",
            "example": "github.com/calcom/cal.com"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["messages", "model"],
                "properties": {
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["role", "content"],
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["user", "assistant", "system"]
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "model": {
                    "type": "string",
                    "enum": ["gpt-4o"],
                    "description": "The model to use for chat completion"
                  },
                  "stream": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to stream the response"
                  },
                  "temperature": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 2,
                    "description": "Sampling temperature for response generation"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful chat response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletion"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string"
                },
                "description": "Stream of chat completion chunks when stream=true"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or repository access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Model not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/ErrorObject"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorObject": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "param": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          }
        }
      },
      "ChatCompletion": {
        "type": "object",
        "description": "Chat completion response"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}