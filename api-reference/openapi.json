{
  "openapi": "3.0.1",
  "info": {
    "title": "Chat",
    "description": "Chat with your repository",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.trydepth.ai"
    }
  ],
  "paths": {
    "/chat": {
      "post": {
        "summary": "Chat with your repository",
        "operationId": "chat",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the repository to query (e.g., github.com/calcom/cal.com)",
            "example": "github.com/calcom/cal.com"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "messages",
                  "model"
                ],
                "properties": {
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "role",
                        "content"
                      ],
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": [
                            "user",
                            "assistant",
                            "system"
                          ]
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "model": {
                    "type": "string",
                    "enum": [
                      "gpt-4o"
                    ],
                    "description": "The model to use for chat completion"
                  },
                  "stream": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to stream the response"
                  },
                  "temperature": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 2,
                    "description": "Sampling temperature for response generation"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful chat response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletion"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or repository access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Model not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/ErrorObject"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorObject": {
        "type": "object",
        "required": [
          "message",
          "type",
          "code"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "param": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          }
        }
      },
      "ChatCompletion": {
        "type": "object",
        "required": [
          "id",
          "object",
          "created",
          "model",
          "choices",
          "usage"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "chat.completion"
            ]
          },
          "created": {
            "type": "integer"
          },
          "model": {
            "type": "string"
          },
          "system_fingerprint": {
            "type": "string"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "index",
                "message",
                "finish_reason"
              ],
              "properties": {
                "index": {
                  "type": "integer"
                },
                "message": {
                  "type": "object",
                  "required": [
                    "role",
                    "content"
                  ],
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "assistant"
                      ]
                    },
                    "content": {
                      "type": "string"
                    },
                    "function_call": {
                      "type": "object",
                      "nullable": true
                    },
                    "tool_calls": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object"
                      }
                    },
                    "refusal": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "finish_reason": {
                  "type": "string",
                  "enum": ["stop", "length", "tool_calls", "content_filter", "function_call"]
                },
                "logprobs": {
                  "type": "object",
                  "nullable": true
                }
              }
            }
          },
          "usage": {
            "type": "object",
            "required": [
              "prompt_tokens",
              "completion_tokens",
              "total_tokens"
            ],
            "properties": {
              "prompt_tokens": {
                "type": "integer"
              },
              "completion_tokens": {
                "type": "integer"
              },
              "total_tokens": {
                "type": "integer"
              },
              "completion_tokens_details": {
                "type": "object",
                "properties": {
                  "reasoning_tokens": {
                    "type": "integer"
                  },
                  "audio_tokens": {
                    "type": "integer"
                  },
                  "accepted_prediction_tokens": {
                    "type": "integer"
                  },
                  "rejected_prediction_tokens": {
                    "type": "integer"
                  }
                }
              },
              "prompt_tokens_details": {
                "type": "object",
                "properties": {
                  "cached_tokens": {
                    "type": "integer"
                  },
                  "audio_tokens": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}